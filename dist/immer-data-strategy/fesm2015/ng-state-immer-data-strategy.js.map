{"version":3,"file":"ng-state-immer-data-strategy.js.map","sources":["ng://@ng-state/immer-data-strategy/lib/immer.data-strategy.ts","ng://@ng-state/immer-data-strategy/lib/immer.data-strategy.module.ts"],"sourcesContent":["import { DataStrategy } from '@ng-state/data-strategy';\r\nimport { produce, setAutoFreeze } from 'immer';\r\n\r\nexport class ImmerDataStrategy extends DataStrategy {\r\n\r\n    init(store: any, isProd: boolean) {\r\n        super.init(store, isProd);\r\n        setAutoFreeze(!isProd);\r\n    }\r\n\r\n    getIn(state: any, path: any[]): any {\r\n        return this.getCursor(state, path);\r\n    }\r\n\r\n    get(state: any, property: string) {\r\n        return state[property];\r\n    }\r\n\r\n    fromJS(data: any): any {\r\n        return data;\r\n    }\r\n\r\n    toJS(data: any) {\r\n        return data;\r\n    }\r\n\r\n    set(state: any, property: string, data: any) {\r\n        state[property] = data;\r\n        return state;\r\n    }\r\n\r\n    setIn(state: any, path: any[], data: any, additionalData: any = {}) {\r\n        const action = (s: any, p: any, d: any) => {\r\n            if (!this.setValue(s, p, d)) {\r\n                throw new Error(`State was not set in ${path}`);\r\n            }\r\n        };\r\n\r\n        if (additionalData.fromUpdate) {\r\n            action(state, path, data);\r\n        } else {\r\n            return produce(state, (draftState: any) => {\r\n                action(draftState, path, data);\r\n            });\r\n        }\r\n    }\r\n\r\n    merge(state: any, newState: any) {\r\n        if (this.isConstructorArray(state)) {\r\n            state.push.apply(newState);\r\n            return;\r\n        }\r\n\r\n        if (this.isConstructorObject(state)) {\r\n            this.extend(state, newState);\r\n\r\n            return;\r\n        }\r\n\r\n        throw new Error(`${state} cannot be merged because type is not supported`);\r\n    }\r\n\r\n    update(path: any[], action: (state: any) => void) {\r\n        const nextState = produce(this.currentState, (draftState: any) => {\r\n            const cursor = this.getCursor(draftState, path);\r\n            action(cursor);\r\n        });\r\n\r\n        this.rootStore.next(nextState);\r\n    }\r\n\r\n    overrideContructor(obj: any) {\r\n    }\r\n\r\n    isObject(obj: any) {\r\n        return obj !== null && typeof (obj) === 'object';\r\n    }\r\n\r\n    resetRoot(initialState: any, startingRoute: string) {\r\n        const state = this.currentState;\r\n        const router = this.get(state, 'router');\r\n\r\n        const nextState = produce(initialState, (draftState: any) => {\r\n            this.set(draftState, 'router', router);\r\n            this.setIn(draftState, ['router', 'url'], startingRoute, { fromUpdate: true });\r\n        });\r\n\r\n        this.rootStore.next(nextState);\r\n    }\r\n\r\n    reset(path: any[], stateToMerge: any): void {\r\n        const state = this.currentState;\r\n\r\n        const nextState = produce(state, (draftState: any) => {\r\n            this.setIn(draftState, path, stateToMerge, { fromUpdate: true });\r\n        });\r\n\r\n        this.rootStore.next(nextState);\r\n    }\r\n\r\n    private getCursor(state: any, propertyPath: string | any[]): any {\r\n        return this.cursorBase(state, propertyPath, (state: any, properties: any) => {\r\n            return properties.length > 0\r\n                ? state[properties[0]]\r\n                : state;\r\n        });\r\n    }\r\n\r\n    private setValue(state: any, propertyPath: string | any[], value: any): boolean {\r\n        if (propertyPath.length === 0) {\r\n            this.merge(state, value);\r\n            return true;\r\n        }\r\n\r\n        return this.cursorBase(state, propertyPath, (state: any, properties: any) => {\r\n            state[properties[0]] = value;\r\n            return true;\r\n        });\r\n    }\r\n\r\n    private cursorBase(state: any, propertyPath: string | any[], action: (state: any, properties: any) => any) {\r\n        let properties = Array.isArray(propertyPath) ? propertyPath : propertyPath.split('.');\r\n\r\n        if (properties.length > 1) {\r\n            if (!state.hasOwnProperty(properties[0]) || typeof state[properties[0]] !== 'object') {\r\n                return null;\r\n            }\r\n\r\n            return this.cursorBase(state[properties[0]], properties.slice(1), action);\r\n        } else {\r\n            return action(state, properties);\r\n        }\r\n    }\r\n\r\n    private isConstructorObject(obj: any) {\r\n        return obj.constructor === Object;\r\n    }\r\n\r\n    private isConstructorArray(obj: any) {\r\n        return obj.constructor === Array;\r\n    }\r\n\r\n    private extend(source: any, target: any, deep: boolean = true) {\r\n        for (let prop in target) {\r\n            if (target.hasOwnProperty(prop)) {\r\n                if (this.isConstructorArray(target[prop])) {\r\n                    source[prop] = [...target[prop]];\r\n                } else if (deep && this.isConstructorObject(target[prop])) {\r\n                    source[prop] = this.extend(source[prop], target[prop], deep);\r\n                } else {\r\n                    source[prop] = target[prop];\r\n                }\r\n            }\r\n        }\r\n\r\n        return source;\r\n    }\r\n}","import { NgModule } from '@angular/core';\r\nimport { ImmerDataStrategy } from './immer.data-strategy';\r\nimport { DataStrategy } from '@ng-state/data-strategy';\r\n\r\n@NgModule({\r\n    providers: [\r\n        { provide: DataStrategy, useClass: ImmerDataStrategy }\r\n    ]\r\n})\r\nexport class ImmerDataStrategyModule {\r\n}\r\n"],"names":[],"mappings":"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"}

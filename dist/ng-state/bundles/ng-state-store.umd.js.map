{"version":3,"file":"ng-state-store.umd.js.map","sources":["ng://@ng-state/store/lib/services/dispatcher.ts","ng://@ng-state/store/lib/helpers/service-locator.ts","ng://@ng-state/store/lib/state/router-state.ts","node_modules/tslib/tslib.es6.js","ng://@ng-state/store/lib/state/state.ts","ng://@ng-state/store/lib/state/history.ts","ng://@ng-state/store/lib/store/select.ts","ng://@ng-state/store/lib/debug/debug-info.ts","ng://@ng-state/store/lib/store/update.ts","ng://@ng-state/store/lib/store/initialize.ts","ng://@ng-state/store/lib/store/map.ts","ng://@ng-state/store/lib/store/reset.ts","ng://@ng-state/store/lib/store/plugins/form-manager.plugin.ts","ng://@ng-state/store/lib/store/plugins/persist-state.plugin.ts","ng://@ng-state/store/lib/store/store.ts","ng://@ng-state/store/lib/state/history-controller.ts","ng://@ng-state/store/lib/ng-state.module.ts","ng://@ng-state/store/lib/ng-state.test-bed.ts","ng://@ng-state/store/lib/helpers/helpers.ts","ng://@ng-state/store/lib/decorators/component-state.decorator.ts","ng://@ng-state/store/lib/decorators/inject-store.decorator.ts"],"sourcesContent":["import {Observable, Subject, Subscription} from 'rxjs';\r\nimport { filter, share, map } from 'rxjs/operators';\r\n\r\nimport { Injectable } from '@angular/core';\r\n\r\nexport class Message {\r\n    constructor(public type?: string, public payload?: any) {\r\n    }\r\n}\r\n\r\n@Injectable()\r\nexport class Dispatcher {\r\n    private subject = new Subject<any>();\r\n\r\n    get observable(): Observable<Message> {\r\n        return this.subject.asObservable();\r\n    }\r\n\r\n    getMessagesOfType(messageType: string): Observable<Message> {\r\n        return this.subject.pipe(filter(msg => msg.type === messageType), share());\r\n    }\r\n\r\n    publish(message: Message): void;\r\n    publish(messageType: string, payload?: any): void;\r\n    publish(message: string | Message, payload?: any): void {\r\n        message = (<Message>message).type !== undefined\r\n            ? message\r\n            : new Message(message as string, payload);\r\n\r\n        this.subject.next(message);\r\n    }\r\n\r\n    subscribe(message: Message, observerOrNext: (payload: any) => void, error?: (error: any) => void, complete?: () => void): Subscription;\r\n    subscribe(messageType: string, observerOrNext: (payload: any) => void, error?: (error: any) => void, complete?: () => void): Subscription;\r\n    subscribe(messageType: string | Message, observerOrNext: (payload: any) => void, error?: (error: any) => void, complete?: () => void): Subscription {\r\n        messageType = (<Function>messageType).prototype instanceof Message\r\n            ? (new (<any>messageType)() as Message).type\r\n            : messageType;\r\n\r\n        return this.getMessagesOfType(messageType as string)\r\n            .pipe(map(msg =>  msg.payload))\r\n            .subscribe(observerOrNext, error, complete);\r\n    }\r\n}","import { Injector } from '@angular/core';\r\n\r\nexport class ServiceLocator {\r\n    static injector: Injector = null;\r\n}","import { Router, NavigationCancel, NavigationEnd, RoutesRecognized } from '@angular/router';\r\nimport { Store } from '../store/store';\r\nimport { DebugInfo } from '../debug/debug-info';\r\nimport { filter, take } from 'rxjs/operators';\r\nimport { ServiceLocator } from '../helpers/service-locator';\r\nimport { DataStrategy } from '@ng-state/data-strategy';\r\n\r\nexport class RouterState {\r\n    static startingRoute = '';\r\n    private dataStrategy: DataStrategy;\r\n\r\n    constructor(private store: Store<any>, private router: Router, private debugInfo: DebugInfo) {\r\n    }\r\n\r\n    init() {\r\n        this.dataStrategy = ServiceLocator.injector.get(DataStrategy);\r\n        this.initRouter();\r\n        this.bindRouter();\r\n    }\r\n\r\n    private initRouter() {\r\n        this.router.events\r\n            .pipe(\r\n                filter(event => event instanceof RoutesRecognized),\r\n                take(1)\r\n            )\r\n            .subscribe((event: RoutesRecognized) => {\r\n                this.store.initialize(['router'], { url: event.url }, false);\r\n            });\r\n    }\r\n\r\n    private bindRouter() {\r\n        if (!this.router.events) {\r\n            return;\r\n        }\r\n\r\n        let cancelledId = -1;\r\n        this.router.events\r\n            .pipe(filter(() => this.debugInfo && !this.debugInfo.isTimeTravel))\r\n            .subscribe((event) => {\r\n                if (event instanceof NavigationCancel) {\r\n                    cancelledId = (<NavigationCancel>event).id;\r\n                }\r\n                if (event instanceof NavigationEnd && (<NavigationEnd>event).id !== cancelledId) {\r\n                    (<Store<any>>this.store.select(['router'])).update(state => {\r\n                        this.dataStrategy.set(state, 'url', event.url);\r\n                    });\r\n                }\r\n            });\r\n    }\r\n}","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import { BehaviorSubject } from 'rxjs';\r\nimport { DataStrategy } from '@ng-state/data-strategy';\r\n\r\nexport class State<T> extends BehaviorSubject<T> {\r\n  constructor(initialState: T, dataStrategy: DataStrategy) {\r\n    dataStrategy.overrideContructor(initialState);\r\n    super(dataStrategy.fromJS(initialState));\r\n  }\r\n}","import { Injectable } from '@angular/core';\r\n\r\n@Injectable()\r\nexport class StateHistory {\r\n    static initialState = {};\r\n\r\n    private options: StateHistoryOptions = {\r\n        collectHistory: true,\r\n        storeHistoryItems: 100\r\n    };\r\n\r\n    get currentState(): any {\r\n        return StateKeeper.CURRENT_STATE;\r\n    }\r\n\r\n    get history(): any[] {\r\n        return StateKeeper.HISTORY;\r\n    }\r\n\r\n    get storeHistoryItems() {\r\n        return this.options.storeHistoryItems;\r\n    }\r\n\r\n    init(initialState: any) {\r\n        StateHistory.initialState = initialState;\r\n    }\r\n\r\n    changeDefaults(options: StateHistoryOptions) {\r\n        this.options = { ...this.options, ...options };\r\n    }\r\n\r\n    setCurrentState(state: any) {\r\n        StateKeeper.CURRENT_STATE = state;\r\n    }\r\n\r\n    add(item: HistoryItem) {\r\n        if (!this.options.collectHistory) {\r\n            return;\r\n        }\r\n\r\n        if (StateKeeper.HISTORY.length >= this.options.storeHistoryItems) {\r\n            StateKeeper.HISTORY.shift();\r\n        }\r\n\r\n        StateKeeper.HISTORY.push(item);\r\n    }\r\n}\r\n\r\nexport class StateKeeper {\r\n    static CURRENT_STATE: any = null;\r\n    static HISTORY = [];\r\n}\r\n\r\nexport interface StateHistoryOptions {\r\n    collectHistory?: boolean;\r\n    storeHistoryItems?: number | null;\r\n}\r\n\r\nexport interface HistoryItem {\r\n    message: string;\r\n    state: any;\r\n}","import { Store } from './store';\r\nimport { map, distinctUntilChanged, takeWhile } from 'rxjs/operators';\r\nimport { ServiceLocator } from '../helpers/service-locator';\r\nimport { DataStrategy } from '@ng-state/data-strategy';\r\n\r\nexport class Select {\r\n    constructor(path: any) {\r\n        let mapped$;\r\n\r\n        const dataStrategy = ServiceLocator.injector.get(DataStrategy);\r\n\r\n        if (typeof path === 'object') {\r\n            mapped$ = (<any>this).pipe(\r\n                map((state: any) => dataStrategy.getIn(state, path)),\r\n                takeWhile((state: any) => state !== undefined),\r\n                distinctUntilChanged()\r\n            );\r\n        }\r\n        else {\r\n            throw new TypeError(`Unexpected type ${typeof path} in select operator,`\r\n                + ` expected 'object' or 'function'`);\r\n        }\r\n\r\n        return mapped$;\r\n    }\r\n}\r\n\r\nexport interface SelectSignature {\r\n  (path: any[]): Store<any>;\r\n}","import { DebugInfoData } from './debug-info-data';\r\nimport { StateHistory } from '../state/history';\r\nimport { Injectable, NgZone } from '@angular/core';\r\nimport { Subject } from 'rxjs';\r\nimport { DataStrategy } from '@ng-state/data-strategy';\r\n\r\n@Injectable()\r\nexport class DebugInfo {\r\n    private debugInfo: DebugInfoData = null;\r\n    private debugMode: boolean;\r\n    private withDevTools: boolean;\r\n    private debugStatePath: any[] = null;\r\n    private devTools = null;\r\n    private devToolsSubscription = null;\r\n    private options: DebugOptions = {\r\n        enableConsoleOutput: true,\r\n        enableDevToolsOutput: true\r\n    };\r\n\r\n    static instance: DebugInfo = null;\r\n\r\n    isTimeTravel = false;\r\n    onApplyHistory = new Subject<DebugHistoryItem>();\r\n\r\n    constructor(private stateHistory: StateHistory, private zone: NgZone, private dataStrategy: DataStrategy) {\r\n    }\r\n\r\n    get publicApi() {\r\n        return {\r\n            start: this.start,\r\n            stop: this.stop\r\n        };\r\n    }\r\n\r\n    get isDebugMode() {\r\n        return this.debugMode;\r\n    }\r\n\r\n    init(debugMode: boolean) {\r\n        this.debugMode = debugMode;\r\n        this.setWithDevTools();\r\n\r\n        if (!this.withDevTools || !debugMode) {\r\n            return;\r\n        }\r\n\r\n        this.trackWithDevTools([]);\r\n    }\r\n\r\n    changeDefaults(options: DebugOptions) {\r\n        this.options = { ...this.options, ...options };\r\n    }\r\n\r\n    add(info: DebugInfoData) {\r\n        if (this.debugMode) {\r\n            this.debugInfo = { ...info };\r\n        }\r\n    }\r\n\r\n    onStateChange(state: any, isIntialState: boolean) {\r\n        if (this.debugMode && !this.isTimeTravel) {\r\n            this.logDebugInfo(state, isIntialState);\r\n        }\r\n    }\r\n\r\n    turnOnTimeTravel() {\r\n        this.isTimeTravel = true;\r\n    }\r\n\r\n    turnOffTimeTravel() {\r\n        this.isTimeTravel = false;\r\n    }\r\n\r\n    private logDebugInfo(state: any, isIntialState: boolean) {\r\n        let debugState = this.debugStatePath && this.dataStrategy.getIn(state, this.debugStatePath) || state;\r\n        if (this.dataStrategy.isObject(debugState)) {\r\n            debugState = this.dataStrategy.toJS(debugState);\r\n        }\r\n\r\n        const debugMessage = this.getDebugMessage();\r\n        this.consoleLog(debugMessage, debugState);\r\n\r\n        if (!this.withDevTools) {\r\n            return;\r\n        }\r\n\r\n        if (isIntialState) {\r\n            this.devTools.init(debugState);\r\n        } else {\r\n            this.devTools.send(debugMessage, debugState);\r\n        }\r\n\r\n        this.stateHistory.add({ message: debugMessage, state: debugState });\r\n\r\n        this.debugInfo = null;\r\n    }\r\n\r\n    private consoleLog(message: string, state: any) {\r\n        if (this.options.enableConsoleOutput) {\r\n            console.info(message, state);\r\n        }\r\n    }\r\n\r\n    private getDebugMessage() {\r\n        let message = '@state/';\r\n\r\n        if (!this.debugInfo) {\r\n            return `${message}${this.getDebugStatePath()}`;\r\n        }\r\n\r\n        message += `${this.debugInfo.statePath.join('/')} - `;\r\n        message += `${(this.debugInfo.message ? this.debugInfo.message.toUpperCase() : (this.debugInfo.actionType || ''))}`;\r\n\r\n        return message;\r\n    }\r\n\r\n    private getDebugStatePath() {\r\n        return this.debugStatePath && this.debugStatePath.length > 0\r\n            ? this.debugStatePath.join('->')\r\n            : 'root';\r\n    }\r\n\r\n    private trackWithDevTools(statePath: any[]) {\r\n        if (!this.withDevTools || this.devTools) {\r\n            return;\r\n        }\r\n\r\n        this.zone.run(() => {\r\n            this.devTools = window['__REDUX_DEVTOOLS_EXTENSION__'].connect({ maxAge: this.stateHistory.storeHistoryItems });\r\n        });\r\n\r\n        this.devToolsSubscription = this.devTools.subscribe((message: any) => {\r\n            if (message.type === 'DISPATCH' && (message.payload.type === 'JUMP_TO_ACTION' || message.payload.type === 'JUMP_TO_STATE')) {\r\n                this.onApplyHistory.next({\r\n                    state: this.dataStrategy.fromJS(JSON.parse(message.state)),\r\n                    statePath: statePath\r\n                });\r\n            }\r\n        });\r\n    }\r\n\r\n    private stopTrackingWithDevTools() {\r\n        if (this.withDevTools) {\r\n            this.withDevTools = false;\r\n            window['__REDUX_DEVTOOLS_EXTENSION__'].disconnect();\r\n            this.devToolsSubscription();\r\n            this.devTools = null;\r\n        }\r\n    }\r\n\r\n    private setWithDevTools() {\r\n        this.withDevTools = this.options.enableDevToolsOutput && typeof window !== 'undefined' && !!window['__REDUX_DEVTOOLS_EXTENSION__'];\r\n    }\r\n\r\n    private start = (statePath: any[] = []) => {\r\n        this.debugStatePath = statePath;\r\n        this.debugMode = true;\r\n\r\n        this.stopTrackingWithDevTools();\r\n        this.setWithDevTools();\r\n        this.trackWithDevTools(statePath);\r\n        this.onStateChange(this.stateHistory.currentState, true);\r\n    }\r\n\r\n    private stop = () => {\r\n        this.debugMode = false;\r\n        this.stopTrackingWithDevTools();\r\n    }\r\n}\r\n\r\nexport interface DebugOptions {\r\n    enableConsoleOutput?: boolean;\r\n    enableDevToolsOutput?: boolean;\r\n}\r\n\r\nexport interface DebugHistoryItem {\r\n    state: any;\r\n    statePath: any[];\r\n}","import { ActionType, DebugInfoData } from '../debug/debug-info-data';\r\nimport { DebugInfo } from '../debug/debug-info';\r\nimport { ServiceLocator } from '../helpers/service-locator';\r\nimport { DataStrategy } from '@ng-state/data-strategy';\r\n\r\nexport class Update {\r\n    constructor(action: (state: any) => void, debugInfo: DebugInfoData = {}) {\r\n\r\n        const defaultDebugInfo = { actionType: ActionType.Update, statePath: (<any>this).statePath };\r\n        DebugInfo.instance.add({ ...defaultDebugInfo, ...debugInfo });\r\n\r\n        const dataStrategy = ServiceLocator.injector.get(DataStrategy) as DataStrategy;\r\n\r\n        try {\r\n            dataStrategy.update((this as any).statePath, action);\r\n        } catch (exception) {\r\n            console.error(exception);\r\n        }\r\n    }\r\n}\r\n\r\nexport interface UpdateSignature<T> {\r\n    (action: (state: T) => void, debugInfo?: DebugInfoData): void;\r\n}","import { Helpers } from '../helpers/helpers';\r\nimport { tap, take } from 'rxjs/operators';\r\nimport { Store } from './store';\r\nimport { ActionType } from '../debug/debug-info-data';\r\nimport { DebugInfo } from '../debug/debug-info';\r\nimport { ServiceLocator } from '../helpers/service-locator';\r\nimport { DataStrategy } from '@ng-state/data-strategy';\r\n\r\nexport class Initialize {\r\n    newStore: Store<any>;\r\n\r\n    constructor(statePath: any[], initialState: any = null) {\r\n        const initialized = '__initialized';\r\n\r\n        let actionWrapper = function (state: any) {\r\n            const dataStrategy = ServiceLocator.injector.get(DataStrategy);\r\n\r\n            if (dataStrategy.getIn(state, [...statePath, initialized])) {\r\n                return;\r\n            }\r\n\r\n            dataStrategy.overrideContructor(initialState);\r\n            initialState.constructor = Object;\r\n            initialState = dataStrategy.fromJS(initialState);\r\n            initialState = dataStrategy.set(initialState, initialized, true);\r\n\r\n            let newState;\r\n\r\n            try {\r\n                newState = dataStrategy.setIn(state, statePath, initialState);\r\n                this.newStore = (<any>this).select(statePath);\r\n                this.newStore.initialState = initialState;\r\n                this.newStore.rootPath = statePath;\r\n            } catch (exception) {\r\n                console.error(exception);\r\n            }\r\n\r\n            (<any>this).source.next(newState);\r\n        }.bind(this);\r\n\r\n        const defaultDebugInfo = { actionType: ActionType.Initialize, statePath: statePath };\r\n        DebugInfo.instance.add(defaultDebugInfo);\r\n\r\n        (<any>this).pipe(\r\n            tap(actionWrapper),\r\n            take(1)\r\n        ).subscribe();\r\n\r\n        return this.newStore as any;\r\n    }\r\n}\r\n\r\nexport interface InitializeSignature<T> {\r\n    <R>(statePath, initialState?: T, addToHistory?: boolean): Store<R>;\r\n}","import { map } from 'rxjs/operators';\r\nimport { Observable } from 'rxjs';\r\n\r\nexport class Map<T, R> {\r\n    constructor(action: (state: any) => Observable<R>) {\r\n        return (<any>this).pipe(map((state: any) => action(state)));\r\n    }\r\n}\r\n\r\nexport interface MapSgnature<T> {\r\n    <R>(action: (state: T) => R): Observable<R>;\r\n}","import { Store } from './store';\r\nimport { StateKeeper, StateHistory } from '../state/history';\r\nimport { ActionType } from '../debug/debug-info-data';\r\nimport { ServiceLocator } from '../helpers/service-locator';\r\nimport { DataStrategy } from '@ng-state/data-strategy';\r\nimport { DebugInfo } from '../debug/debug-info';\r\nimport { RouterState } from '../state/router-state';\r\n\r\nexport class Reset {\r\n    constructor(debugMessage: string = null) {\r\n\r\n        const dataStrategy = ServiceLocator.injector.get(DataStrategy);\r\n\r\n        const restoreState = function (store: Store<any>) {\r\n            let path = store.statePath.filter(item => !store.rootPath.includes(item));\r\n            const isRootPath = Array.isArray(path) && path.length === 0;\r\n            if (isRootPath) {\r\n                dataStrategy.resetRoot(StateHistory.initialState, RouterState.startingRoute);\r\n            } else {\r\n                let initialState: any = !!store.initialState\r\n                    ? store.initialState\r\n                    : dataStrategy.fromJS(StateHistory.initialState);\r\n\r\n                initialState = dataStrategy.getIn(initialState, (path));\r\n\r\n                dataStrategy.reset(store.statePath, initialState);\r\n            }\r\n\r\n            const defaultDebugInfo = { actionType: ActionType.Reset, statePath: path, debugMessage: debugMessage };\r\n            DebugInfo.instance.add(defaultDebugInfo);\r\n        };\r\n\r\n        if (!dataStrategy.isObject(dataStrategy.getIn(StateKeeper.CURRENT_STATE, ((this as any).statePath)))) {\r\n            throw new Error(`Cannot resotre state at path: ${(this as any).statePath}. Maybe you are trying to restore value rather then state.`);\r\n        }\r\n\r\n        restoreState((this as any));\r\n    }\r\n}\r\n\r\nexport interface ResetSignature {\r\n    <R>(debugMessage?: string): void;\r\n}","import { distinctUntilChanged, debounceTime, takeUntil, take } from 'rxjs/operators';\r\nimport { Observable, Subject } from 'rxjs';\r\nimport { Store } from '../store';\r\nimport { DataStrategy } from '@ng-state/data-strategy';\r\nimport { ServiceLocator } from '../../helpers/service-locator';\r\n\r\nexport class NgFormStateManager {\r\n\r\n    private unsubscribe = new Subject();\r\n    private form: FormGroupLike;\r\n    private params: NgFormStateManagerParams;\r\n    private store: Store<any>;\r\n    private dataStrategy: DataStrategy;\r\n\r\n    private onChangeFn: (state: any) => void;\r\n    private shouldUpdateStateFn: (params: ShoulUpdateStateParams) => boolean;\r\n\r\n    constructor(store: Store<any>) {\r\n        this.store = store;\r\n    }\r\n\r\n    bind(form: FormGroupLike, params: NgFormStateManagerParams = {}): NgFormStateManager {\r\n        this.dataStrategy = ServiceLocator.injector.get(DataStrategy);\r\n        this.form = form;\r\n        this.params = { ... { debounceTime: 100, emitEvent: false }, ...params };\r\n        this.setInitialValue();\r\n        this.subscribeToFormChange();\r\n\r\n        return this;\r\n    }\r\n\r\n    reset() {\r\n        this.store.reset();\r\n    }\r\n\r\n    destroy() {\r\n        this.unsubscribe.next(true);\r\n        this.unsubscribe.complete();\r\n\r\n        this.form = null;\r\n        this.store = null;\r\n        this.onChangeFn = null;\r\n        this.shouldUpdateStateFn = null;\r\n    }\r\n\r\n    onChange(onChangeFn: (state: any) => void) {\r\n        this.onChangeFn = onChangeFn;\r\n        return this;\r\n    }\r\n\r\n    shouldUpdateState(shouldUpdateStateFn: (params: ShoulUpdateStateParams) => boolean) {\r\n        this.shouldUpdateStateFn = shouldUpdateStateFn;\r\n        return this;\r\n    }\r\n\r\n    private setInitialValue() {\r\n        this.store\r\n            .pipe(\r\n                distinctUntilChanged(),\r\n                takeUntil(this.unsubscribe)\r\n            )\r\n            .subscribe((state: any) => {\r\n                this.form.patchValue(this.dataStrategy.toJS(state), { emitEvent: this.params.emitEvent });\r\n            });\r\n    }\r\n\r\n    private subscribeToFormChange() {\r\n\r\n        this.form.valueChanges\r\n            .pipe(\r\n                debounceTime(this.params.debounceTime),\r\n                distinctUntilChanged(),\r\n                takeUntil(this.unsubscribe)\r\n            )\r\n            .subscribe(value => {\r\n                let stateUpdated = false;\r\n\r\n                this.store.update((state: any) => {\r\n                    stateUpdated = this.executeUpdate(value, state);\r\n                });\r\n\r\n                if (stateUpdated) {\r\n                    this.onChangeCall();\r\n                }\r\n            });\r\n    }\r\n\r\n    private executeUpdate(value: any, state: any): boolean {\r\n        if (this.shouldUpdateStateFn) {\r\n            if (this.shouldUpdateStateFn({\r\n                form: this.form,\r\n                state: state,\r\n                value: value\r\n            })) {\r\n                this.dataStrategy.merge(state, this.dataStrategy.fromJS(value));\r\n                return true;\r\n            }\r\n        } else {\r\n            this.dataStrategy.merge(state, this.dataStrategy.fromJS(value));\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    private onChangeCall() {\r\n        if (this.onChangeFn) {\r\n            this.store\r\n                .pipe(take(1))\r\n                .subscribe(state => {\r\n                    this.onChangeFn(this.dataStrategy.toJS(state));\r\n                });\r\n        }\r\n    }\r\n}\r\n\r\nexport type FormGroupLike = {\r\n    patchValue: Function;\r\n    setValue: Function;\r\n    value: any;\r\n    get: Function;\r\n    valueChanges: Observable<any>;\r\n    controls: any;\r\n};\r\n\r\nexport type NgFormStateManagerParams = {\r\n    debounceTime?: number;\r\n    emitEvent?: boolean;\r\n};\r\n\r\nexport interface ShoulUpdateStateParams {\r\n    form: FormGroupLike;\r\n    state: any;\r\n    value: any;\r\n}","import { tap, take } from 'rxjs/operators';\r\nimport { Store } from '../store';\r\nimport { Observable, isObservable, from, of, ReplaySubject, forkJoin } from 'rxjs';\r\nimport { ServiceLocator } from '../../helpers/service-locator';\r\nimport { DataStrategy } from '@ng-state/data-strategy';\r\n\r\nexport class PersistStateManager {\r\n    private prefix = 'state::';\r\n\r\n    protected static customStorageConfig: PersistStateParams = {};\r\n\r\n    protected defaults: PersistStateParams = {\r\n        key: '',\r\n        storageConfig: null,\r\n        deserialize: JSON.parse,\r\n        serialize: JSON.stringify\r\n    };\r\n\r\n    constructor(private store: Store<any>) {\r\n    }\r\n\r\n    static configureStorage(storage: PersistStateStorage, getKeys: () => Promise<string[]> | Observable<string[]> | string[]) {\r\n        PersistStateManager.customStorageConfig.storageConfig = { storage: storage, getKeys: getKeys };\r\n    }\r\n\r\n    static configureSerializer(serialize: Function, deserialize: Function) {\r\n        PersistStateManager.customStorageConfig.serialize = serialize;\r\n        PersistStateManager.customStorageConfig.deserialize = deserialize;\r\n    }\r\n\r\n    save(params?: PersistStateParams): Observable<PersistStateItem> {\r\n        const dataStrategy = ServiceLocator.injector.get(DataStrategy) as DataStrategy;\r\n        const onSaveComplete = new ReplaySubject<PersistStateItem>(1);\r\n\r\n        params = this.getParams(params, this.store);\r\n\r\n        this.store.pipe(\r\n            tap((state: any) => {\r\n                this.resolve(params.storageConfig.storage.setItem(params.key, params.serialize(dataStrategy.toJS(state))))\r\n                    .pipe(take(1))\r\n                    .subscribe(_ => {\r\n                        onSaveComplete.next({\r\n                            key: params.key,\r\n                            data: dataStrategy.toJS(state)\r\n                        });\r\n                    });\r\n            }),\r\n            take(1)\r\n        ).subscribe();\r\n\r\n        return onSaveComplete\r\n            .asObservable()\r\n            .pipe(take(1));\r\n    }\r\n\r\n    load(params?: PersistStateParams, keepEntry = false): Observable<PersistStateItem> {\r\n        const dataStrategy = ServiceLocator.injector.get(DataStrategy) as DataStrategy;\r\n        const onLoadComplete = new ReplaySubject<PersistStateItem>(1);\r\n\r\n        params = this.getParams(params, this.store);\r\n        this.resolve(params.storageConfig.storage.getItem(params.key))\r\n            .pipe(take(1))\r\n            .subscribe(loadedState => {\r\n                this.store.update((state: Map<any, any>) => {\r\n                    dataStrategy.merge(state, dataStrategy.fromJS(params.deserialize(loadedState)));\r\n                });\r\n\r\n                if (!keepEntry) {\r\n                    this.removeAction(params);\r\n                }\r\n\r\n                onLoadComplete.next({\r\n                    key: params.key,\r\n                    data: loadedState\r\n                });\r\n            });\r\n\r\n        return onLoadComplete\r\n            .asObservable()\r\n            .pipe(take(1));\r\n    }\r\n\r\n    remove(params?: PersistStateParams): Observable<string> {\r\n        params = this.getParams(params, this.store);\r\n        return this.removeAction(params);\r\n    }\r\n\r\n    clear(params?: PersistStateParams): Observable<string[]> {\r\n        const onClearComplete = new ReplaySubject<string[]>(1);\r\n        const clearKeys: Observable<string>[] = [];\r\n\r\n        params = this.getParams(params, this.store);\r\n\r\n        this.resolve(params.storageConfig.getKeys())\r\n            .pipe(take(1))\r\n            .subscribe(keys => {\r\n                keys.filter((e: string) => e.startsWith(this.prefix))\r\n                    .map((key: string) => {\r\n                        const localParams = { ...params };\r\n                        localParams.key = key;\r\n\r\n                        clearKeys.push(this.removeAction(localParams));\r\n                    });\r\n\r\n                forkJoin(clearKeys)\r\n                    .pipe(take(1))\r\n                    .subscribe(keys => {\r\n                        onClearComplete.next(keys);\r\n                    });\r\n            });\r\n\r\n        return onClearComplete\r\n            .asObservable()\r\n            .pipe(take(1));\r\n    }\r\n\r\n    private removeAction(params: PersistStateParams): Observable<string> {\r\n        const onRemoveComplete = new ReplaySubject<string>(1);\r\n\r\n        this.resolve(params.storageConfig.storage.removeItem(params.key))\r\n            .pipe(take(1))\r\n            .subscribe(_ => {\r\n                onRemoveComplete.next(params.key);\r\n            });\r\n\r\n        return onRemoveComplete\r\n            .asObservable()\r\n            .pipe(take(1));\r\n    }\r\n\r\n    private getParams(params: PersistStateParams, store: Store<any>) {\r\n        this.setDefaultStorage();\r\n\r\n        params = { ...this.defaults, ...PersistStateManager.customStorageConfig, ...params };\r\n\r\n        if (!params.key) {\r\n            params.key = store.statePath.join('.');\r\n        }\r\n\r\n        params.key = `${this.prefix}${params.key}`;\r\n\r\n        return params;\r\n    }\r\n\r\n    private setDefaultStorage() {\r\n        if (!this.defaults.storageConfig) {\r\n            this.defaults.storageConfig = {\r\n                storage: localStorage,\r\n                getKeys: () => Object.keys(localStorage)\r\n            };\r\n        }\r\n    }\r\n\r\n    private isPromise(v: any) {\r\n        return v && typeof v.then === 'function';\r\n    }\r\n\r\n    private resolve(asyncOrValue: any) {\r\n        if (this.isPromise(asyncOrValue) || isObservable(asyncOrValue)) {\r\n            return from(asyncOrValue);\r\n        }\r\n\r\n        return of(asyncOrValue);\r\n    }\r\n}\r\n\r\nexport interface PersistStateStorage {\r\n    getItem(key: string): Promise<any> | Observable<any> | any;\r\n    setItem(key: string, value: any): Promise<any> | Observable<any> | any;\r\n    removeItem(key: string): Promise<any> | Observable<any> | any;\r\n    clear(): void;\r\n}\r\n\r\nexport interface PersistStateParams {\r\n    key?: string;\r\n    storageConfig?: StorageConfiguartion;\r\n    deserialize?: Function;\r\n    serialize?: Function;\r\n}\r\n\r\nexport interface StorageConfiguartion {\r\n    storage: PersistStateStorage;\r\n    getKeys: () => Promise<string[]> | Observable<string[]> | string[];\r\n}\r\n\r\nexport interface PersistStateItem {\r\n    key: string;\r\n    data: any;\r\n}","import { Select, SelectSignature } from './select';\r\nimport { Update, UpdateSignature } from './update';\r\nimport { Initialize, InitializeSignature } from './initialize';\r\nimport { Operator, Observable, Observer } from 'rxjs';\r\nimport { MapSgnature, Map } from './map';\r\nimport { ResetSignature, Reset } from './reset';\r\nimport { NgFormStateManager } from './plugins/form-manager.plugin';\r\nimport { PersistStateManager } from './plugins/persist-state.plugin';\r\n\r\nexport class Store<T> extends Observable<T> implements Observer<any> {\r\n    statePath: any[] = [];\r\n    rootPath: any[] = [];\r\n    initialState: any;\r\n\r\n    update: UpdateSignature<T>;\r\n    initialize: InitializeSignature<T>;\r\n    map: MapSgnature<T>;\r\n    reset: ResetSignature;\r\n\r\n    form: NgFormStateManager;\r\n    storage: PersistStateManager;\r\n\r\n    constructor(state: Observable<any>) {\r\n        super();\r\n\r\n        this.source = state;\r\n        this.initializeOperators(this);\r\n    }\r\n\r\n    select: SelectSignature = (statePath: string[]): Store<T> => {\r\n        let selectStore = Select.bind(this).call(this, statePath);\r\n        selectStore.statePath = [...this.statePath, ...statePath];\r\n        selectStore.rootPath = this.rootPath;\r\n        selectStore.initialState = this.initialState;\r\n        this.initializeOperators(selectStore);\r\n        return selectStore;\r\n    }\r\n\r\n    lift<R>(operator: Operator<T, R>): Store<R> {\r\n        const store = new Store<R>(this);\r\n        store.operator = operator;\r\n        return store;\r\n    }\r\n\r\n    error(err: any) {\r\n        console.log(err);\r\n    }\r\n\r\n    next(state: any) {\r\n        (<any>this.source).next(state);\r\n    }\r\n\r\n    complete() {\r\n    }\r\n\r\n    initializeOperators(storeContext: Store<T>) {\r\n        storeContext.update = Update.bind(storeContext);\r\n        storeContext.initialize = Initialize.bind(storeContext);\r\n        storeContext.reset = Reset.bind(storeContext);\r\n        storeContext.map = Map.bind(storeContext);\r\n        storeContext.form = new NgFormStateManager(storeContext);\r\n        storeContext.storage = new PersistStateManager(storeContext);\r\n    }\r\n}","import { Store } from '../store/store';\r\nimport { StateHistory } from './history';\r\nimport { Subject } from 'rxjs';\r\nimport { DebugInfo, DebugHistoryItem } from '../debug/debug-info';\r\nimport { Router } from '@angular/router';\r\nimport { take } from 'rxjs/operators';\r\nimport { DataStrategy } from '@ng-state/data-strategy';\r\n\r\nexport class HistoryController {\r\n    private onHistoryChange = new Subject();\r\n\r\n    constructor(private store: Store<any>, private history: StateHistory, private debugerInfo: DebugInfo, private router: Router, private dataStrategy: DataStrategy) {\r\n    }\r\n\r\n    init() {\r\n        this.store.subscribe(state => {\r\n            const isIntialState = !this.history.currentState;\r\n\r\n            this.history.setCurrentState(state);\r\n            this.debugerInfo.onStateChange(state, isIntialState);\r\n            this.onHistoryChange.next(true);\r\n        });\r\n\r\n        this.debugerInfo.onApplyHistory.subscribe(this.applyHistory);\r\n    }\r\n\r\n    private applyHistory = (debugHistoryItem: DebugHistoryItem) => {\r\n        this.debugerInfo.turnOnTimeTravel();\r\n\r\n        const targetRoute = this.dataStrategy.getIn(debugHistoryItem.state, ['router', 'url']);\r\n        if (targetRoute && this.router.url !== targetRoute) {\r\n            this.router.navigateByUrl(targetRoute).then(_ => {\r\n                this.applyState(debugHistoryItem.state, debugHistoryItem.statePath);\r\n            });\r\n        } else {\r\n            this.applyState(debugHistoryItem.state, debugHistoryItem.statePath);\r\n        }\r\n\r\n        this.onHistoryChange\r\n            .pipe(take(1))\r\n            .subscribe(_ => {\r\n                this.debugerInfo.turnOffTimeTravel();\r\n            });\r\n    }\r\n\r\n    private applyState(targetState: any, statePath: string[]) {\r\n        if (statePath.length === 0) {\r\n            this.store.next(targetState);\r\n        } else {\r\n            this.store\r\n                .update((state: any) => {\r\n                    this.dataStrategy.setIn(state, statePath, targetState, { fromUpdate: true });\r\n                });\r\n        }\r\n    }\r\n}","import { Inject, Injector, ModuleWithProviders, NgModule, InjectionToken, NgZone } from '@angular/core';\r\nimport { makeStateKey, TransferState } from '@angular/platform-browser';\r\nimport { CommonModule } from '@angular/common';\r\nimport { Dispatcher } from './services/dispatcher';\r\nimport { Router } from '@angular/router';\r\nimport { RouterState } from './state/router-state';\r\nimport { ServiceLocator } from './helpers/service-locator';\r\nimport { State } from './state/state';\r\nimport { StateHistory, StateHistoryOptions, StateKeeper } from './state/history';\r\nimport { Store } from './store/store';\r\nimport { HistoryController } from './state/history-controller';\r\nimport { DebugInfo, DebugOptions } from './debug/debug-info';\r\nimport { DataStrategy } from '@ng-state/data-strategy';\r\n\r\nexport const RESTORE_FROM_SERVER = new InjectionToken('RESTORE_FROM_SERVER');\r\nexport const TRANSFER_STATE_KEY = 'state';\r\nexport const INITIAL_STATE = new InjectionToken('INITIAL_STATE');\r\nexport const NG_STATE_OPTIONS = new InjectionToken('NG_STATE_OPTIONS');\r\nexport const IS_PROD = new InjectionToken('IS_PROD');\r\nexport const IS_TEST = new InjectionToken('IS_TEST');\r\n\r\nexport function stateFactory(initialState, dataStrategy: DataStrategy, transferState?: TransferState, restoreFromServer?: boolean) {\r\n    if (transferState && restoreFromServer) {\r\n        const stateKey = makeStateKey<any>(TRANSFER_STATE_KEY);\r\n        if (transferState.hasKey(stateKey)) {\r\n            initialState = transferState.get(stateKey, initialState);\r\n        }\r\n    }\r\n\r\n    return new State(initialState, dataStrategy);\r\n}\r\n\r\nexport function storeFactory(state: State<any>) {\r\n    return new Store(state);\r\n}\r\n\r\nexport function historyControllerFactory(store: Store<any>, history: StateHistory, debugerInfo: DebugInfo, router: Router, dataStrategy: DataStrategy) {\r\n    return new HistoryController(store, history, debugerInfo, router, dataStrategy);\r\n}\r\n\r\nexport function routerStateFactory(store: Store<any>, router: Router, debugerInfo: DebugInfo) {\r\n    return new RouterState(store, router, debugerInfo);\r\n}\r\n\r\nexport function debugInfoFactory(history: StateHistory, zone: NgZone, dataStrategy: DataStrategy) {\r\n    return new DebugInfo(history, zone, dataStrategy);\r\n}\r\n\r\n\r\n@NgModule({\r\n    imports: [CommonModule]\r\n})\r\nexport class StoreModule {\r\n    static provideStore(initialState: any, isProd?: boolean, options: NgStateOptions = {}, restoreStateFromServer?: boolean): ModuleWithProviders {\r\n        return {\r\n            ngModule: StoreModule,\r\n            providers: [\r\n                { provide: NG_STATE_OPTIONS, useValue: options },\r\n                { provide: INITIAL_STATE, useValue: initialState },\r\n                { provide: IS_PROD, useValue: isProd },\r\n                { provide: IS_TEST, useValue: false },\r\n                { provide: RESTORE_FROM_SERVER, useValue: restoreStateFromServer },\r\n                { provide: State, useFactory: stateFactory, deps: [INITIAL_STATE, DataStrategy, TransferState, RESTORE_FROM_SERVER] },\r\n                { provide: Store, useFactory: storeFactory, deps: [State] },\r\n                { provide: StateHistory, useClass: StateHistory },\r\n                { provide: DebugInfo, useFactory: debugInfoFactory, deps: [StateHistory, NgZone, DataStrategy] },\r\n                { provide: HistoryController, useFactory: historyControllerFactory, deps: [Store, StateHistory, DebugInfo, Router, DataStrategy] },\r\n                { provide: RouterState, useFactory: routerStateFactory, deps: [Store, Router, DebugInfo] },\r\n                Dispatcher\r\n            ]\r\n        };\r\n    }\r\n\r\n    constructor(\r\n        private stateHistory: StateHistory,\r\n        private debugInfo: DebugInfo,\r\n        injector: Injector,\r\n        historyController: HistoryController,\r\n        routerState: RouterState,\r\n        dataStrategy: DataStrategy,\r\n        store: Store<any>,\r\n        @Inject(INITIAL_STATE) initialState: any,\r\n        @Inject(NG_STATE_OPTIONS) ngStateOptions: any,\r\n        @Inject(IS_PROD) isProd: any\r\n    ) {\r\n        ServiceLocator.injector = injector;\r\n        this.initStateHistory(initialState, ngStateOptions);\r\n        this.initDebugger(ngStateOptions);\r\n        historyController.init();\r\n\r\n        routerState.init();\r\n\r\n        if (!isProd) {\r\n            (<any>window).state = StateHistory;\r\n        }\r\n\r\n        if (!isProd) {\r\n            (<any>window).state = {\r\n                history: StateKeeper,\r\n                debug: debugInfo.publicApi\r\n            };\r\n        }\r\n\r\n        dataStrategy.init(store);\r\n    }\r\n\r\n    private initStateHistory(initialState: any, ngStateOptions: NgStateOptions) {\r\n        if (ngStateOptions && ngStateOptions.history) {\r\n            this.stateHistory.changeDefaults(ngStateOptions.history);\r\n        }\r\n\r\n        this.stateHistory.init(initialState);\r\n    }\r\n\r\n    private initDebugger(ngStateOptions: NgStateOptions) {\r\n        DebugInfo.instance = this.debugInfo;\r\n\r\n        if (!ngStateOptions || !ngStateOptions.debugger) {\r\n            return;\r\n        }\r\n\r\n        if (ngStateOptions.debugger.options) {\r\n            this.debugInfo.changeDefaults(ngStateOptions.debugger.options);\r\n        }\r\n\r\n        if (ngStateOptions.debugger.enableInitialDebugging) {\r\n            this.debugInfo.init(true);\r\n        }\r\n    }\r\n}\r\n\r\nexport interface NgStateOptions {\r\n    history?: StateHistoryOptions;\r\n    debugger?: {\r\n        enableInitialDebugging?: boolean;\r\n        options?: DebugOptions;\r\n    };\r\n}","import { ServiceLocator } from './helpers/service-locator';\r\nimport { IS_TEST, stateFactory, storeFactory } from './ng-state.module';\r\nimport { StateHistory } from './state/history';\r\nimport { Store } from './store/store';\r\nimport { HistoryController } from './state/history-controller';\r\nimport { DebugInfo } from './debug/debug-info';\r\nimport { DataStrategy } from '@ng-state/data-strategy';\r\n\r\nexport class NgStateTestBed {\r\n\r\n    private static dataStrategy: DataStrategy = null;\r\n    private static dependencyInjection = <{ key: any, value: any }[]>[];\r\n\r\n    public static setTestEnvironment(dataStrategy: DataStrategy) {\r\n        this.dependencyInjection = [];\r\n        this.dependencyInjection.push({ key: this.getMockName(IS_TEST), value: true });\r\n        this.dependencyInjection.push({ key: this.getMockName(DataStrategy), value: dataStrategy });\r\n\r\n        ServiceLocator.injector = {\r\n            get: (key: any) => {\r\n                const name = this.getMockName(key);\r\n                const service = this.dependencyInjection.find(k => k.key === name);\r\n                if (!service) {\r\n                    throw new Error(`Mock is not found for: ${key}`);\r\n                }\r\n\r\n                return service.value;\r\n            }\r\n        };\r\n\r\n        this.dataStrategy = dataStrategy;\r\n    }\r\n\r\n    public static createStore(initialState: any): Store<any> {\r\n        const state = stateFactory(initialState, this.dataStrategy);\r\n        const store = storeFactory(state);\r\n        this.dataStrategy.init(store);\r\n\r\n        const stateHistory = new StateHistory();\r\n        stateHistory.init(initialState);\r\n        const debugInfo = new DebugInfo(stateHistory, { run: () => { } } as any, this.dataStrategy);\r\n        DebugInfo.instance = debugInfo;\r\n        const historyController = new HistoryController(\r\n            store,\r\n            stateHistory,\r\n            debugInfo,\r\n            { navigateByUrl: () => new Promise(() => { }) } as any,\r\n            this.dataStrategy);\r\n        historyController.init();\r\n\r\n        this.dependencyInjection.push({ key: this.getMockName(Store), value: store });\r\n        return store;\r\n    }\r\n\r\n    private static getMockName(obj: any) {\r\n        if (obj === IS_TEST) {\r\n            return 'IS_TEST';\r\n        }\r\n\r\n        if (obj.constructor.name.toLowerCase() !== 'function') {\r\n            return obj.constructor.name;\r\n        }\r\n\r\n        return obj.prototype.constructor.name;\r\n    }\r\n\r\n    public static createActions<T>(actionsType: any, initialState: any = {}, path: string | any[] = []): T {\r\n        this.createStore(initialState);\r\n        const actions = new (actionsType as any)();\r\n        actions.createTestStore(NgStateTestBed.getPath(path));\r\n\r\n        return actions;\r\n    }\r\n\r\n    public static setActionsToComponent(actions: any, component: any) {\r\n        (<any>component).actions = actions;\r\n    }\r\n\r\n    private static getPath(path: string | string[]) {\r\n        if (path instanceof Array) {\r\n            return path;\r\n        }\r\n\r\n        path = path.split('/');\r\n        return path;\r\n    }\r\n}","export class Helpers {\r\n    static guid() {\r\n        const s4 = () => {\r\n          return Math.floor((1 + Math.random()) * 0x10000)\r\n            .toString(16)\r\n            .substring(1);\r\n        };\r\n\r\n        return s4() + s4() + s4() + s4() + s4() + s4() + s4() + s4();\r\n      }\r\n}","import { ServiceLocator } from '../helpers/service-locator';\r\nimport { ChangeDetectorRef, Input, OnDestroy, OnChanges, OnInit, SimpleChanges } from '@angular/core';\r\nimport { IS_PROD, IS_TEST } from '../ng-state.module';\r\nimport { Dispatcher } from '../services/dispatcher';\r\n\r\nexport function ComponentState(stateActions: any | ((T) => any), disableOnChangesBeforeActionsCreated = true) {\r\n    return (target: any) => {\r\n\r\n        let origInit = target.prototype.ngOnInit || (() => { });\r\n        let origDestroy = target.prototype.ngOnDestroy || (() => { });\r\n        let origOnChanges = target.prototype.ngOnChanges || (() => { });\r\n\r\n        const ensureMarkForCheck = function() {\r\n            if (!this.cd) {\r\n                this.cd = ServiceLocator.injector.get(ChangeDetectorRef);\r\n            }\r\n        };\r\n\r\n        target.prototype.ngOnChanges = function (changes) {\r\n            if (disableOnChangesBeforeActionsCreated && !this.actions) {\r\n                return;\r\n            }\r\n\r\n            origOnChanges.apply(this, arguments);\r\n        };\r\n\r\n        target.prototype.ngOnInit = function () {\r\n            const isTest = ServiceLocator.injector.get(IS_TEST);\r\n            if (isTest) {\r\n                origInit.apply(this, arguments);\r\n                return;\r\n            }\r\n\r\n            if (!this.statePath) {\r\n                this.statePath = [];\r\n            }\r\n\r\n            if (stateActions) {\r\n                ensureMarkForCheck.apply(this);\r\n\r\n                // DOC - CONVETION: only annonymous function allwed for choosing state; Actions can be only named functions;\r\n                const extractedStateAction = stateActions.name === ''\r\n                    ? stateActions(this)\r\n                    : stateActions;\r\n\r\n                const actions = new extractedStateAction();\r\n                this.statePath = actions.createStore(this.statePath, this.stateIndex);\r\n\r\n                this.stateChangeSubscription = ServiceLocator.injector.get(Dispatcher)\r\n                    .subscribe(actions.aId, () => {\r\n                        this.cd.markForCheck();\r\n                    });\r\n\r\n                this.actions = actions;\r\n            }\r\n\r\n            origInit.apply(this, arguments);\r\n        };\r\n\r\n        target.prototype.ngOnDestroy = function () {\r\n            if (this.actions) {\r\n                this.actions.onDestroy();\r\n            }\r\n\r\n            if (this.stateChangeSubscription) {\r\n                this.stateChangeSubscription.unsubscribe();\r\n            }\r\n\r\n            origDestroy.apply(this, arguments);\r\n        };\r\n    };\r\n}\r\n\r\nexport class HasStateActions<T> implements OnInit, OnDestroy, OnChanges {\r\n\r\n    @Input() statePath: any;\r\n    @Input() stateIndex?: string | number = null;\r\n\r\n    readonly actions: T;\r\n    readonly cd: ChangeDetectorRef;\r\n\r\n    constructor(cd: ChangeDetectorRef) {\r\n        this.cd = cd;\r\n    }\r\n\r\n    ngOnInit(): void { }\r\n    ngOnChanges(changes: SimpleChanges): void { }\r\n    ngOnDestroy(): void { }\r\n}","import { Observable } from 'rxjs';\r\nimport { ServiceLocator } from '../helpers/service-locator';\r\nimport { Store } from '../store/store';\r\nimport { Helpers } from '../helpers/helpers';\r\nimport { Dispatcher } from '../services/dispatcher';\r\nimport { DataStrategy } from '@ng-state/data-strategy';\r\n\r\nexport function InjectStore(newPath: string[] | string | ((currentPath, stateIndex) => string[] | string), intialState: Object | any = null, debug: boolean = false) {\r\n    let getStatePath = (currentPath, stateIndex, extractedPath) => {\r\n\r\n        let transformedPath = (<string[]>extractedPath).map(item => {\r\n            return item === '${stateIndex}'\r\n                ? stateIndex\r\n                : item;\r\n        });\r\n\r\n        return [...currentPath, ...transformedPath];\r\n    };\r\n\r\n    let getAbsoluteStatePath = (stateIndex: (string | number) | (string | number)[], extractedPath) => {\r\n        const transformedPath = (<string>extractedPath).split('/');\r\n        if (typeof stateIndex === 'string' || typeof stateIndex === 'number') {\r\n            stateIndex = [stateIndex];\r\n        }\r\n\r\n        let nthStatePathIndex = 0;\r\n        transformedPath.forEach((value, index) => {\r\n            if (value === '${stateIndex}') {\r\n                if ((<any[]>stateIndex).length <= nthStatePathIndex) {\r\n                    throw new Error(`State path ${newPath} has not enough stateIndexes set. Please provide stateIndexes as array in the same order as set in statePath.`);\r\n                }\r\n\r\n                transformedPath[index] = stateIndex[nthStatePathIndex];\r\n                nthStatePathIndex++;\r\n            }\r\n        });\r\n\r\n        return transformedPath;\r\n    };\r\n\r\n    let getAllGetters = (target: any): any[] => {\r\n        const targetMethods = Reflect.getPrototypeOf(target);\r\n        let methods = Object.entries(Object.getOwnPropertyDescriptors(targetMethods))\r\n            .map(([key, descriptor]: [string, any]) => {\r\n                return {\r\n                    name: key,\r\n                    isGetter: typeof descriptor.get === 'function'\r\n                };\r\n            })\r\n            .filter(method => method.isGetter)\r\n            .map(method => method.name);\r\n\r\n        return methods;\r\n    };\r\n\r\n    let convertGettersToProperties = (instance: any) => {\r\n        const getters = getAllGetters(instance);\r\n        getters.forEach(name => {\r\n\r\n            const tempGetter = instance[name];\r\n            if (tempGetter instanceof Observable) {\r\n                delete instance[name];\r\n                Object.defineProperty(instance, name, {\r\n                    value: tempGetter\r\n                });\r\n            }\r\n        });\r\n    };\r\n\r\n    return (target: any) => {\r\n\r\n        target.prototype.createStore = function (currentPath: any[], stateIndex: (string | number) | (string | number)[]) {\r\n            this.aId = Helpers.guid();\r\n\r\n            let extractedPath = typeof newPath === 'function' && (<any>newPath).name === ''\r\n                ? (<any>newPath)(currentPath, stateIndex)\r\n                : newPath;\r\n\r\n            const statePath = typeof extractedPath === 'string'\r\n                ? getAbsoluteStatePath(stateIndex, extractedPath)\r\n                : getStatePath(currentPath, stateIndex, extractedPath);\r\n\r\n            const store = ServiceLocator.injector.get(Store) as Store<any>;\r\n            const dispatcher = ServiceLocator.injector.get(Dispatcher);\r\n\r\n            this.store = intialState\r\n                 ? store.initialize(statePath, intialState)\r\n                 : store.select(statePath);\r\n\r\n            this.stateChangeSubscription = this.store.subscribe((state: any) => {\r\n                this.state = state;\r\n                dispatcher.publish(this.aId);\r\n\r\n                if (debug) {\r\n                    const dataStrategy = ServiceLocator.injector.get(DataStrategy);\r\n                    console.info(dataStrategy.toJS(state));\r\n                }\r\n            });\r\n\r\n            convertGettersToProperties(this);\r\n\r\n            return statePath;\r\n        };\r\n\r\n        target.prototype.createTestStore = function (statePath: any[]) {\r\n            let store = ServiceLocator.injector.get(Store);\r\n            this.store = store.select(statePath);\r\n            const that = this;\r\n            this.stateChangeSubscription = this.store.subscribe((state: any) => {\r\n                that.state = state;\r\n            });\r\n        };\r\n\r\n        target.prototype.onDestroy = function () {\r\n            this.stateChangeSubscription.unsubscribe();\r\n        };\r\n    };\r\n}\r\n\r\nexport class HasStore<T> {\r\n    store: Store<T> = null;\r\n    state?: T = null;\r\n}"],"names":["Subject","filter","share","map","Injectable","router","DataStrategy","RoutesRecognized","take","NavigationCancel","NavigationEnd","tslib_1.__extends","dataStrategy","BehaviorSubject","takeWhile","distinctUntilChanged","NgZone","tap","takeUntil","debounceTime","ReplaySubject","forkJoin","isObservable","from","of","Observable","InjectionToken","makeStateKey","TransferState","Router","NgModule","CommonModule","Injector","Inject","ChangeDetectorRef","Input"],"mappings":"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"}
